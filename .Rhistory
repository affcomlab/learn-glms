renv::restore()
install.packages("renv")
renv::restore()
renv::restore()
renv::restore()
quarto render
.libPaths()
lapply(.libPaths(), list.files)
install.packages("tidyverse")
lapply(.libPaths(), list.files)
install.packages("easystats")
install.packages("ggeffects")
renv::status()
renv::snapshot()
# Setup
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
## Read data from file
polysim <- read_csv("polysim.csv")
polysim
## Plot x-y1 relationship
ggplot(data = polysim, mapping = aes(x = x, y = y1)) + geom_point()
# ==============================================================================
# LM for a linear relationship example
## Fit linear model
fit1 <- lm(
formula = y1 ~ x,
data = polysim
)
model_parameters(fit1) |> print_md()
predict_response(fit1, terms = "x") |> plot(show_data = TRUE)
## Check linearity assumption
check_model(fit1, check = "linearity") # good enough
# ==============================================================================
# LM with raw polynomials example
## Fit raw polynomial model
fit1b <- lm(
formula = y1 ~ x + I(x^2),
data = polysim
)
model_parameters(fit1b) |> print_md() # both are nonsignificant
predict_response(fit1b, terms = "x") |> plot(show_data = TRUE) # unchanged
## Check linearity and collinearity assumptions
check_model(fit1b, check = "linearity") # still acceptable
check_collinearity(fit1b) # problematically high
# ==============================================================================
# LM with orthogonal polynomials example
## Fit orthogonal polynomial model
fit1c <- lm(
formula = y1 ~ poly(x, degree = 2),
data = polysim
)
model_parameters(fit1c) |> print_md() # first degree is significant
predict_response(fit1c, terms = "x") |> plot(show_data = TRUE) # unchanged
## Check linearity assumption
check_model(fit1c, check = "linearity") # still acceptable
quarto render
quarto render
quarto render --profile=revealjs
install.packages("tidyverse")
install.packages("easystats")
install.packages("ggeffects")
# Setup
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
## Read in data from file
yearspubs <- read_csv("yearspubs.csv")
# Setup
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
## Read in data from file
yearspubs <- read_csv("yearspubs.csv")
yearspubs
# Setup
#| output: false
## Load packages
library(tidyverse)
View(yearspubs)
yearspubs$sex
type(yearspubs$sex)
typeof(yearspubs$sex)
?standardize_parameters
?standardize_parameters
?model_performance
summary(yearspubs)
yearspubs$sex
yearspubs$sex <- factor(yearspubs$sex, c("female","male"))
summary(yearspubs)
typeof(yearspubs$sex) #check type
yearspubs$sex <- factor(yearspubs$sex, c("female","male"))
## Fit linear model and print parameters
fit2 <- lm(
formula = salary ~ years_since_phd + sex,
data = yearspubs
)
model_parameters(fit2) |> print_md()
gmeans <- estimate_means(fit2, at = "sex")
gmeans <- estimate_means(fit2, by = "sex")
gmeas
gmeans
?estimate_means
plot(gmeans)
gmeans2 <- estimate_means(fit2, by = c("sex","years_since_phd"))
gmeans2
contrasts <- estimate_contrasts(fit2, contrast = "sex")
contrasts
56927.96 - 52818.46
estimate_slopes(fit2)
estimate_slopes(fit2, trend = "sex")
summary(yearspubs)
estimate_slopes(fit2, trend = "years_since_phd")
fit2
estimate_slopes(fit2, trend = "years_since_phd", by = "sex")
?estimate_slopes
plot(ggpredict(
model = fit2,
terms = "years_since_phd"
))
plot(ggpredict(
model = fit2,
terms = c("years_since_phd",
"sex")
))
plot(ggpredict(
model = fit2,
terms = c("sex",
"years_since_phd")
))
plot(ggpredict(
model = fit2,
terms = c("years_since_phd",
"sex")
))
estimate_slopes(fit2, trend = "years_since_phd")
estimate_slopes(fit2, trend = "years_since_phd") |> print_md()
## Fit linear model and print parameters
fit3 <- lm(
formula = salary ~ years_since_phd * sex,
data = yearspubs
)
model_parameters(fit3) |> print_md()
plot(ggpredict(
model = fit3,
terms = c("years_since_phd",
"sex")
))
estimate_slopes(fit2, trend = "years_since_phd")
estimate_slopes(fit2, trend = "years_since_phd", by = "sex")
estimate_slopes(fit3, trend = "years_since_phd")
estimate_slopes(fit3, trend = "years_since_phd", by = "sex")
fit3
summary(fit3)
estimate_slopes(fit3, trend = "years_since_phd")
model_parameters(fit3)
plot(ggpredict(
model = fit3,
terms = c("years_since_phd",
"sex")
))
estimate_slopes(fit3, trend = "years_since_phd", by = "sex")
View(yearspubs)
check_model(fit3)
check_model(fit2)
renv::install()
renv::install("tidyverse")
renv::install(c("easystats","ggeffects","effects","emmeans"))
renv::snapshot()
renv::snapshot()
renv::status()
renv::snapshot(update = TRUE, force = TRUE)
renv::snapshot(packages = "emmeans")
renv::snapshot(packages = "effects")
renv::snapshot(packages = "ggeffects")
renv::snapshot(update = TRUE, force = TRUE, type = "all")
typeof(yearspubs$salary)
renv::restore()
?hist
?geom_histogram
?factor
standardize_parameters(fit)
#| collapse: true
## Fit linear model and print parameters
fit <- lm(
formula = salary ~ years_since_phd,
data = yearspubs
)
model_parameters(fit)
standardize_parameters(fit)
model_parameters(fit, standardize = 'refit')
View(yearspubs)
ggplot(data=yearspubs, aes(n_cites)) +
geom_histogram()
## Fit linear model and print parameters
fit2 <- lm(
formula = salary ~ years_since_phd + n_cites,
data = yearspubs
)
model_parameters(fit2) |> print_md()
ggplot(data = yearspub, aes(n_cites)) +
geom_histogram()
ggplot(data = yearspubs, aes(n_cites)) +
geom_histogram()
fit2
parameters(fit2)
model_paarm
model_parameters(fit2)
ggplot(data = yearspubs, aes(n_pubs)) +
geom_histogram()
## Fit linear model and print parameters
fit2 <- lm(
formula = salary ~ years_since_phd + pubs,
data = yearspubs
)
## Fit linear model and print parameters
fit2 <- lm(
formula = salary ~ years_since_phd + n_pubs,
data = yearspubs
)
model_parameters(fit2) |> print_md()
model_parameters(fit2)
fit3 <- lm(formula = salary ~ sex, data = salaries)
fit3 <- lm(formula = salary ~ sex, data = yearspubs)
fit3
model_parameters(fit3)
estimate_means(fit3)
gmeans1 <- estimate_means(fit3)
plot(gmeans1)
contrasts <- estimate_contrasts(fit3, contrast = "sex")
contrasts
triple(4)
sum(4)
4 |> sum()
sum(4,5)
4,5 |> sum()
c(4,5) |> sum()
sum(4,5)
c(4,5) |> sum()
```{r, warning = FALSE, message=FALSE}
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
View(titanic_data)
Titanic
het <- Titanic
het
## Prepare the data for analysis
titanic2 <-
titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
View(titanic2)
View(titanic2)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
View(titanic_data)
?mutate
class(titanic2)
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
model_paramters(fit2)
model_parameters(fit2)
model_parameters(fit2, exponentiate = TRUE)
histogram(titanic2$survived_b)
hist(titanic2$survived_b)
#simple linear regression
fit1 <- lm(
formula = survived_b ~ fare,
data = titanic2
)
model_paramters(fit1)
model_parameters(fit1)
predict_response(fit1, terms = "fare") |> plot(show_data = TRUE)
## Check residuals
check_residuals(fit) |> plot() # looks bad
## Check residuals
check_residuals(fit1) |> plot() # looks bad
## Check residuals
check_residuals(fit1) |> plot() # looks bad
install.packages("qqplotr")
## Check residuals
check_residuals(fit1) |> plot() # looks bad
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point()
ggplot(titanic2, aes(x = fare, y = survived)) +
geom_boxplot()
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point()  |> jitter()
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point()  |> jitter()
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point()
ggplot(titanic2, aes(x = fare, y = survived)) +
geom_boxplot()
starwars
starwars %>%
filter(
str_detect(name, "C")
)
starwars %>%
filter(
str_detect(name, "C")
)
starwars %>%
filter(
str_detect(name, "^C")
)
