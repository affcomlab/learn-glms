titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
titanic2 #print
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point() + mytheme
ggplot(titanic2, aes(x = fare, y = survived)) +
geom_boxplot() + mytheme
#simple linear regression
fit1 <- lm(
formula = survived_b ~ fare,
data = titanic2
)
model_parameters(fit1) |> print_md()
predict_response(fit1, terms = "fare") |> plot(show_data = TRUE)
## Check residuals
check_residuals(fit1) |> plot() # looks bad
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
model_parameters(fit2)
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial,
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
beta <- coef(fit2)
beta
model_parameters(fit2)
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
beta
plot(jitter(y,0.1) ~ jitter(height), wcgs, xlab="Fare", ylab="probability survival",pch=".")
plot(jitter(survived_b,0.1) ~ jitter(fare), titanic2, xlab="Fare", ylab="probability survival",pch=".")
curve(ilogit(beta[1] + beta[2]*0),add=TRUE)
beta[1]
beta[2]
curve(ilogit(beta[1] + beta[2]*0),add=TRUE)
plot(jitter(survived_b,0.1) ~ jitter(fare), titanic2, xlab="Fare", ylab="probability survival",pch=".")
curve(ilogit(beta[1] + beta[2]*0),add=TRUE)
plot(jitter(survived_b,0.1) ~ jitter(fare), titanic2, xlab="Fare", ylab="probability survival",pch=".")
curve(ilogit(beta[1] + beta[2]*0),add=TRUE)
curve(ilogit(beta[1] + beta[2]*x),add=TRUE)
plot(jitter(survived_b,0.1) ~ jitter(fare), titanic2, xlab="Fare", ylab="probability survival",pch=".")
curve(ilogit(beta[1] + beta[2]*x),add=TRUE)
?ilogit
ilog
?ilog
install.packages("faraway")
library(farway)
library(faraway)
plot(jitter(survived_b,0.1) ~ jitter(fare), titanic2, xlab="Fare", ylab="probability survival",pch=".")
curve(ilogit(beta[1] + beta[2]*x),add=TRUE)
curve(ilogit(beta[1] + beta[2]*x),add=TRUE,lty=2)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
model_parameters(fit2)
fit2
model_parameters(fit2)
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
View(titanic2)
?lapply()
?mapply
mapply(cor, titanic2$age, titanic2$fare)
titanic2 %>%
mutate(
cor1 = cor(fare, age)
)
iris
dat <- iris
View(dat)
vars <- colnames(dat)
vars
vars_1 <- vars[1:3]
vars_2 <- vars[4:5]
mapply(cor(vars_1,vars_2))
mapply(cor(dat$vars_1,dat$vars_2))
mapply(cor(x,y) x = dat$vars_1, y = dat$vars_2)
mapply(cor(x,y), x = dat$vars_1, y = dat$vars_2)
dat$vars_1
dat$[vars_1]
mapply(function(x, y) seq_len(x) + y,
c(a =  1, b = 2, c = 3),  # names from first
c(A = 10, B = 0, C = -10))
seq_len(A)
View(dat)
mappky(function(x,y) cor(x,y),
dat$Sepal.Length, dat$Sepal.Width)
mapply(function(x,y) cor(x,y),
dat$Sepal.Length, dat$Sepal.Width)
lapply(function(x,y) cor(x,y),
dat$Sepal.Length, dat$Sepal.Width)
?lapply
2821/2900
0.9727/(1-0.9727)
fit1 <- glm(
formula = surivived_b ~ 1,
family = binomial(link = "logit"),
data = titanic2
)
fit1 <- glm(
formula = survived_b ~ 1,
family = binomial(link = "logit"),
data = titanic2
)
fit1
titanic2$survived_b
table(titanic2$survived_b)
table(titanic2$survived_b)
p_survived <- 342/(342+545)
p_survived
o_sruvived <- p_survived/(1 - p_survived)
o_survived <- p_survived/(1 - p_survived)
o_survived
log_odds <- ln(o_survived)
log_odds <- log(o_survived)
log_odds
2821/2900
0.9727/(1-0.9727)
ln(35.63)
log(35.63)
0.75/0.25
0.75/(1-0.75)
o_survived
p_survived
0.50/.50
model_parameters(fit1)
log_odds <- log(o_survived)
log_odds
exp(0.02)
ln(0.02)
log(0.02)
exp(0.02)
log(1.020201)
exp(0.02) #convert log-odds to odds
model_paramters(fit2)
model_parameters(fit2)
log(1.020201)
## Print parameters in odds
model_parameters(fit2, exponentiate = TRUE) |> print_md()
View(titanic2)
titanic2$survived <- factor(titanic2$survived)
summary(titanic2)
titanic2$survived_b <- factor(titanic2$survived_b)
summary(titanic2)
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
mytheme <- theme_bw(
base_size = 12
)
## Prepare the data for analysis
titanic2 <-
titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
titanic2 #print
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point() + mytheme
ggplot(titanic2, aes(x = fare, y = survived)) +
geom_boxplot() + mytheme
#simple linear regression
fit1 <- lm(
formula = survived_b ~ fare,
data = titanic2
)
model_parameters(fit1) |> print_md()
predict_response(fit1, terms = "fare") |> plot(show_data = TRUE)
## Check residuals
check_residuals(fit1) |> plot() # looks bad
table(titanic2$survived_b) # 0 = dead, 1 = alive
p_survived <- 342/(342+545)
p_survived
o_survived <- p_survived/(1 - p_survived)
o_survived
0.75/(1-0.75)
log_odds <- log(o_survived)
log_odds
fit1 <- glm(
formula = survived_b ~ 1,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit1) |> print_md()
fit2 <- glm(
formula = survived_b ~ fare,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit2) |> print_md()
exp(0.02) #convert log-odds to odds
## Print parameters in odds
model_parameters(fit2, exponentiate = TRUE) |> print_md()
predict_response(fit2, terms = "fare") |> plot(show_data = TRUE)
summary(titanic2)
fit3 <- glm(
formula = survived_b ~ fare + age,
family = binomial(link = "logit"),
data = titanic2
)
## Print parameters in logit (i.e., log-odds) units
model_parameters(fit3) |> print_md()
## Print parameters in odds
model_parameters(fit3, exponentiate = TRUE) |> print_md()
```{r, warning=FALSE,message=FALSE}
```{r, warning=FALSE,message=FALSE}
predict_response(fit3, terms = "fare") |> plot(show_data = TRUE)
predict_response(fit3, terms = "age") |> plot(show_data = TRUE)
summary(titanic2)
titanic2$class <- factor(titanic2$class)
fit4 <- glm(
formula = survived_b ~ class,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit4) |> print_md()
levels(titanic2$class)
titanic2$class <- factor(titanic2$class, levels =c("1st","2nd","3rd"))
fit4 <- glm(
formula = survived_b ~ class,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit4) |> print_md()
gmeans1 <- estimate_means(fit4, by = c("class"))
gmeans1 |> print_md()
gmeans
gmeans1
model_parameters(fit4, exponentiate = TRUE) |> print_md()
predict_response(fit3, terms = "class") |> plot(show_data = TRUE)
predict_response(fit4, terms = "class") |> plot(show_data = TRUE)
?predict_response
e^(1)
e(1)
exp(1)
exp(0)
fit5 <- glm(
formula = survived_b ~ class + fare,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit5) |> print_md()
View(titanic2)
fit5 <- glm(
formula = survived_b ~ class + age,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit5) |> print_md()
model_parameters(fit5, exponentiate = TRUE) |> print_md()
1-.53
predict_response(fit5, terms = "age") |> plot(show_data = TRUE)
predict_response(fit5, terms = "class") |> plot(show_data = T
gmeans2 <- estimate_means(fit5, by = c("class"))
gmeans2 |> print_md()
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
mytheme <- theme_bw(
base_size = 12
)
## Prepare the data for analysis
titanic2 <-
titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
titanic2 #print
ggplot(titanic2, aes(x = fare, y = survived_b)) +
geom_point() + mytheme
ggplot(titanic2, aes(x = fare, y = survived)) +
geom_boxplot() + mytheme
#simple linear regression
fitlm <- lm(
formula = survived_b ~ fare,
data = titanic2
)
model_parameters(fit1) |> print_md()
predict_response(fit1, terms = "fare") |> plot(show_data = TRUE)
check_model(fitlm)
check_model(fit1)
#simple linear regression
fitlm <- lm(
formula = survived_b ~ fare,
data = titanic2
)
model_parameters(fitlm) |> print_md()
p_heads <- 60/(60+40)
p_heads
o_heads <- p_heads/(1 - p_heads)
o_heads
log_heads <- log(o_heads)
log_heads
exp(-0.47)
?case_match
??case_match
??recode
recode
?recode
??recode
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
mytheme <- theme_bw(
base_size = 12
)
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
## Prepare the data for analysis
titanic2 <-
titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
titanic2 #print
View(titanic2)
titanic_data$survived2 <- titanic_data$survived
View(titanic_data)
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
titanic_data <- read_csv("titanic.csv")
titanic_data
## Prepare the data for analysis
titanic2 <-
titanic_data |>
mutate(
survived_b = case_match(
survived,
"no" ~ 0,
"yes" ~ 1
)
)
titanic2 #print
View(titanic_data)
df <- titanic_data %>% select(c(fare,survived))
View(df)
model_parameters(fit1, exponentiate = TRUE) |> print_md()
fit1 <- glm(
formula = survived_b ~ 1,
family = binomial(link = "logit"),
data = titanic2
)
model_parameters(fit1) |> print_md()
model_parameters(fit1, exponentiate = TRUE) |> print_md()
1-0.63
predict_response(fit1) |> plot(show_data = TRUE)
depression <- read_csv("depression.csv")
View(depression)
depression2 <-
depression |>
mutate(
phq9_max = 27, # maximum possible score (can be same or different per row)
phq9_p = phq9 / phq9_max # proportion of maximum possible score per row
) |>
print()
fit2 <- glm(
formula = phq9_p ~ income_ratio,
family = binomial(link = "logit"),
weights = phq9_max,
data = depression2
)
summary(fit2)
lmod <- glm(
formula = cbind(phq9,phq9_max) ~ income_ratio,
family = binomial(link="logit"),
data = depression2
)
summary(lmod)
library(faraway)
data(orings)
force(orings)
lmod <- glm(
formula = cbind(phq9,27-phq9) ~ income_ratio,
family = binomial(link="logit"),
data = depression2
)
summary(fit2)
summary(lmod)
View(depression2)
plot(damage/6 ~ temp, orings, xlim=c(25,85), ylim = c(0,1), xlab=" ↪→ Temperature", ylab="Prob of damage")
View(depression2)
View(depression2)
View(depression)
View(depression)
## Load packages
library(tidyverse)
library(easystats)
library(ggeffects)
library(DHARMa)
library(qqplotr)
## Read in data from file
depression <- read_csv("depression.csv")
depression
View(depression)
View(depression2)
depression2 <-
depression |>
mutate(
phq9_max = 27, # maximum possible score (can be same or different per row)
phq9_p = phq9 / phq9_max # proportion of maximum possible score per row
) |>
depression2
depression2 <-
depression |>
mutate(
phq9_max = 27, # maximum possible score (can be same or different per row)
phq9_p = phq9 / phq9_max # proportion of maximum possible score per row
)
depression2
hist(depression2$phq9_p)
View(depression)
View(depression)
View(depression)
ggplot(depression2, aes(x = income_ratio, y = phq9_p)) +
geom_point() + mytheme
mytheme <- theme_bw(
base_size = 12
)
ggplot(depression2, aes(x = income_ratio, y = phq9_p)) +
geom_point() + mytheme
fit2 <- glm(
formula = phq9_p ~ income_ratio,
family = binomial(link = "logit"),
weights = phq9_max,
data = depression2
)
model_parameters(fit2)
ggplot(depression2, aes(x = income_ratio, y = phq9_p)) +
geom_point() + mytheme
model_parameters(fit2, exponentiate = TRUE) |> print_md()
hist(depression2$phq9_p)
hist(depression2$phq9)
View(depression2)
mean(3, 5, 5, 7, 5)
country <- c("USA", "China", "Japan", "Germany", "India")
n <- nchar(country)
mean(n)
mean(c(3,5,5,7,5))
mean(3,5,5,7,5)
mean(3)
?mean
